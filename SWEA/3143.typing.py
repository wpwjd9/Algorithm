'''
어떤 문자열 A를 타이핑하려고 한다.

그냥 한 글자씩 타이핑 한다면 A의 길이만큼 키를 눌러야 할 것이다.

여기에 속도를 조금 더 높이기 위해 어떤 문자열 B가 저장되어 있어서 키를 한번 누른 것으로 B전체를 타이핑 할 수 있다.

이미 타이핑 한 문자를 지우는 것은 불가능하다.

A와 B가 주어질 때 A 전체를 타이핑 하기 위해 키를 눌러야 하는 횟수의 최솟값을 구하여라.

첫 번째 줄에 테스트 케이스의 수 T가 주어진다.

각 테스트 케이스마다 첫 번째 줄에 두 문자열 A, B가 주어진다. A의 길이는 1이상 10,000이하, B의 길이는 1이상 100이하이다.
'''

T = int(input())
for t in range(1, T + 1):
    a, b = map(str, input().split())
    r_word = a                              # 원본 문자열을 해치지 않기 위함
    cnt = 0                                 # 몇 번 대체 되었는지 세기 위한 cnt

    while b in r_word:                      # r_word가 b 문자열을 포함할 동안만 반복
        r_word = r_word.replace(b, '', 1)   # r_word 내에 b 문자열을 공백으로 replace(한 반복당 한 번만 실행)
        cnt += 1                            # cnt + 1
    print(f'#{t} {cnt + len(r_word)}')      # 모든 반복을 수행하고 난 뒤의 r_word의 길이 + cnt를 출력